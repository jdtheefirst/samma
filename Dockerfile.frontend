# Use a Node.js image to build the frontend app
FROM node:16-alpine as build

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json to install dependencies
COPY frontend/package.json frontend/package-lock.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application
COPY frontend/ .

# Run the build command to create the production-ready static files
RUN npm run build

# Use Nginx to serve the build files
FROM nginx:alpine

# Set the working directory for Nginx to serve the app
WORKDIR /usr/share/nginx/html

# Copy the build files from the build stage into the Nginx container
COPY --from=build /app/build /usr/share/nginx/html

# Expose port 80 to allow external access to the app
EXPOSE 80

# Start Nginx to serve the app
CMD ["nginx"]

